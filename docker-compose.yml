name: "hyperliquid"

services:
  node:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - CHAIN=${CHAIN}
        - VALIDATOR=false
        - OVERRIDE_PEER_IPS=${OVERRIDE_PEER_IPS:-unset}
        - OVERRIDE_TRY_NEW_PEERS=${OVERRIDE_TRY_NEW_PEERS:-unset}
    ports:
      - "4000-4010:4000-4010"
    volumes:
      - hl-home:/home/hluser
      - hl-data:/home/hluser/hl/data

  validator:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - CHAIN=${CHAIN}
        - VALIDATOR=true
        - OVERRIDE_PEER_IPS=${OVERRIDE_PEER_IPS:-unset}
        - OVERRIDE_TRY_NEW_PEERS=${OVERRIDE_TRY_NEW_PEERS:-unset}
        - SIGNER_KEY=${SIGNER_KEY:-unset}
    ports:
      - "4000-4010:4000-4010"
    volumes:
      - hl-home:/home/hluser
      - hl-data:/home/hluser/hl/data

  pruner:
    restart: unless-stopped
    build: ./pruner
    volumes:
      - hl-data:/home/hluser/hl/data

  hl_exporter:
    restart: unless-stopped
    build:
      dockerfile: hl_exporter/Dockerfile
      args:
        - USER_ID=10000
        - GROUP_ID=10000
        - CHAIN=${CHAIN}
    container_name: hl_exporter
    user: "10000:10000"
    environment:
      - HOSTNAME=hl_exporter
      - HOME=/home/hluser
      - NODE_HOME=/home/hluser/hl
      - BINARY_HOME=/home/hluser
    volumes:
      - hl-home:/home/hluser
      - hl-data:/home/hluser/hl/data
    depends_on:
      - node
      - validator

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ${PWD}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.listen-address=:9099"
    depends_on:
      - hl_exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana # Named volume for Grafana data persistence
      - ${PWD}/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ${PWD}/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ${PWD}/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped

volumes:
  hl-home:
    driver: local
  hl-data:
    driver: local
  prometheus_data:
  grafana_data:
